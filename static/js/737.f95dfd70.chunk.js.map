{"version":3,"file":"static/js/737.f95dfd70.chunk.js","mappings":"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","sources":["components/button/button.component.tsx","components/button/button.styles.tsx","components/form-input/form-input.styles.tsx","components/form-input/form-input.component.tsx","components/sign-up-form/sign-up-form.styles.tsx","components/sign-up-form/sign-up-form.component.tsx","components/sign-in-form/sign-in-form.styles.tsx","components/sign-in-form/sign-in-form.component.tsx","routes/authentication/authentication.styles.tsx","routes/authentication/authentication.component.tsx","store/user/user.selector.ts","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import { FC, ButtonHTMLAttributes } from 'react';\r\n\r\nimport {\r\n  BaseButton,\r\n  GoogleSignInButton,\r\n  InvertedButton,\r\n  ButtonSpinner,\r\n} from './button.styles';\r\n\r\nexport enum BUTTON_TYPE_CLASSES {\r\n  base = 'base',\r\n  google = 'google-sign-in',\r\n  inverted = 'inverted',\r\n}\r\n\r\nconst getButton = (buttonType = BUTTON_TYPE_CLASSES.base): typeof BaseButton =>\r\n  ({\r\n    [BUTTON_TYPE_CLASSES.base]: BaseButton,\r\n    [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\r\n    [BUTTON_TYPE_CLASSES.inverted]: InvertedButton,\r\n  }[buttonType]);\r\n\r\nexport type ButtonProps = {\r\n  buttonType?: BUTTON_TYPE_CLASSES;\r\n  isLoading?: boolean;\r\n} & ButtonHTMLAttributes<HTMLButtonElement>;\r\n\r\nconst Button: FC<ButtonProps> = ({\r\n  children,\r\n  buttonType,\r\n  isLoading,\r\n  ...otherProps\r\n}) => {\r\n  const CustomButton = getButton(buttonType);\r\n\r\n  return (\r\n    <CustomButton disabled={isLoading} {...otherProps}>\r\n      {isLoading ? <ButtonSpinner /> : children}\r\n    </CustomButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\n\r\nimport { SpinnerContainer } from '../spinner/spinner.styles';\r\n\r\nexport const BaseButton = styled.button`\r\n  min-width: 165px;\r\n  width: auto;\r\n  height: 50px;\r\n  letter-spacing: 0.5px;\r\n  line-height: 50px;\r\n  padding: 0 35px 0 35px;\r\n  font-size: 15px;\r\n  font-weight: 100;\r\n  background-color: black;\r\n  color: white;\r\n  text-transform: uppercase;\r\n  font-family: 'Open Sans';\r\n  border: none;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  &:hover {\r\n    background-color: white;\r\n    color: black;\r\n    border: 1px solid black;\r\n  }\r\n\r\n  @media (max-width: 900px) {\r\n    &:hover {\r\n      background-color: black;\r\n      color: white;\r\n      border: none;\r\n    }\r\n  }\r\n\r\n  &:active {\r\n    background-color: white;\r\n    color: black;\r\n    border: 1px solid black;\r\n    -webkit-tap-highlight-color: transparent;\r\n  }\r\n`;\r\n\r\nexport const GoogleSignInButton = styled(BaseButton)`\r\n  background-color: #4285f4;\r\n  color: white;\r\n\r\n  &:hover {\r\n    background-color: #357ae8;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nexport const InvertedButton = styled(BaseButton)`\r\n  background-color: white;\r\n  color: black;\r\n  border: 1px solid black;\r\n\r\n  &:hover {\r\n    background-color: black;\r\n    color: white;\r\n    border: none;\r\n  }\r\n\r\n  @media (max-width: 900px) {\r\n    &:hover {\r\n      background-color: white;\r\n      color: black;\r\n      border: 1px solid black;\r\n    }\r\n  }\r\n\r\n  &:active {\r\n    background-color: black;\r\n    color: white;\r\n    border: none;\r\n    -webkit-tap-highlight-color: transparent;\r\n  }\r\n`;\r\n\r\nexport const ButtonSpinner = styled(SpinnerContainer)`\r\n  width: 30px;\r\n  height: 30px;\r\n`;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst subColor = 'grey';\r\nconst mainColor = 'black';\r\n\r\nconst shrinkLabelStyles = css`\r\n  top: -14px;\r\n  font-size: 12px;\r\n  color: ${mainColor};\r\n`;\r\n\r\ntype FormInputLabelProps = {\r\n  shrink?: boolean;\r\n};\r\n\r\nexport const FormInputLabel = styled.label<FormInputLabelProps>`\r\n  color: ${subColor};\r\n  font-size: 16px;\r\n  font-weight: normal;\r\n  position: absolute;\r\n  pointer-events: none;\r\n  left: 5px;\r\n  top: 10px;\r\n  transition: 300ms ease all;\r\n\r\n  ${({ shrink }) => shrink && shrinkLabelStyles}\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  background: none;\r\n  background-color: white;\r\n  color: ${subColor};\r\n  font-size: 18px;\r\n  padding: 10px 10px 10px 5px;\r\n  display: block;\r\n  width: 100%;\r\n  border: none;\r\n  border-radius: 0;\r\n  border-bottom: 1px solid ${subColor};\r\n  margin: 25px 0;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:focus ~ ${FormInputLabel} {\r\n    ${shrinkLabelStyles};\r\n  }\r\n`;\r\n\r\nexport const Group = styled.div`\r\n  position: relative;\r\n  margin: 45px 0;\r\n\r\n  input[type='password'] {\r\n    letter-spacing: 0.3em;\r\n  }\r\n`;\r\n","import { InputHTMLAttributes, FC } from 'react';\r\n\r\nimport { FormInputLabel, Input, Group } from './form-input.styles';\r\n\r\ntype FormInputProps = {\r\n  label: string;\r\n} & InputHTMLAttributes<HTMLInputElement>;\r\n\r\nconst FormInput: FC<FormInputProps> = ({ label, ...otherProps }) => {\r\n  return (\r\n    <Group>\r\n      <Input {...otherProps} />\r\n      {label && (\r\n        <FormInputLabel\r\n          shrink={Boolean(\r\n            otherProps &&\r\n              typeof otherProps.value === 'string' &&\r\n              otherProps.value.length\r\n          )}\r\n        >\r\n          {label}\r\n        </FormInputLabel>\r\n      )}\r\n    </Group>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import styled from 'styled-components';\r\n\r\nexport const SignUpContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 380px;\r\n\r\n  h2 {\r\n    margin: 10px 0;\r\n  }\r\n\r\n  @media (max-width: 470px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport const SignUpButtonContainer = styled.div`\r\n  @media (max-width: 470px) {\r\n    width: 80%;\r\n    margin: 0 auto;\r\n\r\n    & button {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n","import { useState, FormEvent, ChangeEvent } from 'react';\r\nimport { AuthError, AuthErrorCodes } from 'firebase/auth';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport Button from '../button/button.component';\r\n\r\nimport { signUpStart } from '../../store/user/user.action';\r\n\r\nimport { SignUpContainer, SignUpButtonContainer } from './sign-up-form.styles';\r\n\r\nconst defaultFormFields = {\r\n  displayName: '',\r\n  email: '',\r\n  password: '',\r\n  confirmPassword: '',\r\n};\r\n\r\nconst SignUpForm = () => {\r\n  const [formFields, setFormFields] = useState(defaultFormFields);\r\n  const { displayName, email, password, confirmPassword } = formFields;\r\n  const dispatch = useDispatch();\r\n\r\n  const resetFormFields = () => {\r\n    setFormFields(defaultFormFields);\r\n  };\r\n\r\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      alert('Passwords do not match!');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      dispatch(signUpStart(email, password, displayName));\r\n      resetFormFields();\r\n    } catch (error) {\r\n      if ((error as AuthError).code === AuthErrorCodes.EMAIL_EXISTS) {\r\n        alert('Cannot create user, email already in use!');\r\n      } else {\r\n        console.log('User creation encountered an error', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n\r\n    setFormFields({ ...formFields, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <SignUpContainer>\r\n      <h2>Don't have an account?</h2>\r\n      <span>Sign up with your email and password</span>\r\n      <form onSubmit={handleSubmit}>\r\n        <FormInput\r\n          label=\"Display Name\"\r\n          type=\"text\"\r\n          required\r\n          onChange={handleChange}\r\n          name=\"displayName\"\r\n          value={displayName}\r\n        />\r\n\r\n        <FormInput\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          required\r\n          onChange={handleChange}\r\n          name=\"email\"\r\n          value={email}\r\n        />\r\n\r\n        <FormInput\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          required\r\n          onChange={handleChange}\r\n          name=\"password\"\r\n          value={password}\r\n        />\r\n\r\n        <FormInput\r\n          label=\"Confirm Password\"\r\n          type=\"password\"\r\n          required\r\n          onChange={handleChange}\r\n          name=\"confirmPassword\"\r\n          value={confirmPassword}\r\n        />\r\n        <SignUpButtonContainer>\r\n          <Button type=\"submit\">Sign Up</Button>\r\n        </SignUpButtonContainer>\r\n      </form>\r\n    </SignUpContainer>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const SignInContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 380px;\r\n\r\n  h2 {\r\n    margin: 10px 0;\r\n  }\r\n\r\n  @media (max-width: 470px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  @media (max-width: 470px) {\r\n    flex-direction: column;\r\n    width: 80%;\r\n    margin: 0 auto;\r\n    gap: 20px;\r\n  }\r\n`;\r\n","import { useState, FormEvent, ChangeEvent } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport Button, { BUTTON_TYPE_CLASSES } from '../button/button.component';\r\n\r\nimport {\r\n  googleSignInStart,\r\n  emailSignInStart,\r\n} from '../../store/user/user.action';\r\n\r\nimport { SignInContainer, ButtonsContainer } from './sign-in-form.styles';\r\n\r\nconst defaultFormFields = {\r\n  email: '',\r\n  password: '',\r\n};\r\n\r\nconst SignInForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [formFields, setFormFields] = useState(defaultFormFields);\r\n  const { email, password } = formFields;\r\n\r\n  const resetFormFields = () => {\r\n    setFormFields(defaultFormFields);\r\n  };\r\n\r\n  const signInWithGoogle = async () => {\r\n    dispatch(googleSignInStart());\r\n  };\r\n\r\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      dispatch(emailSignInStart(email, password));\r\n      resetFormFields();\r\n    } catch (error) {\r\n      console.log('User sign-in failed', error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n\r\n    setFormFields({ ...formFields, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <SignInContainer>\r\n      <h2>Already have an account?</h2>\r\n      <span>Sign in with your email and password</span>\r\n      <form onSubmit={handleSubmit}>\r\n        <FormInput\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          required\r\n          onChange={handleChange}\r\n          name=\"email\"\r\n          value={email}\r\n        />\r\n\r\n        <FormInput\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          required\r\n          onChange={handleChange}\r\n          name=\"password\"\r\n          value={password}\r\n        />\r\n\r\n        <ButtonsContainer>\r\n          <Button type=\"submit\">Sign In</Button>\r\n          <Button\r\n            type=\"button\"\r\n            buttonType={BUTTON_TYPE_CLASSES.google}\r\n            onClick={signInWithGoogle}\r\n          >\r\n            Google Sign In\r\n          </Button>\r\n        </ButtonsContainer>\r\n      </form>\r\n    </SignInContainer>\r\n  );\r\n};\r\n\r\nexport default SignInForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const AuthenticationContainer = styled.div`\r\n  display: flex;\r\n  width: 900px;\r\n  justify-content: space-between;\r\n  margin: 30px auto;\r\n\r\n  @media (max-width: 1100px) {\r\n    justify-content: space-evenly;\r\n  }\r\n\r\n  @media (max-width: 900px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 60px;\r\n    width: 100%;\r\n  }\r\n`;\r\n","import { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectCurrentUser } from '../../store/user/user.selector';\r\n\r\nimport SignUpForm from '../../components/sign-up-form/sign-up-form.component';\r\nimport SignInForm from '../../components/sign-in-form/sign-in-form.component';\r\n\r\nimport { AuthenticationContainer } from './authentication.styles';\r\n\r\nconst Authentication = () => {\r\n  const navigate = useNavigate();\r\n  const currentUser = useSelector(selectCurrentUser);\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      navigate('/');\r\n    }\r\n  }, [currentUser, navigate]);\r\n\r\n  return (\r\n    <AuthenticationContainer>\r\n      <SignInForm />\r\n      <SignUpForm />\r\n    </AuthenticationContainer>\r\n  );\r\n};\r\n\r\nexport default Authentication;\r\n","import { createSelector } from 'reselect';\r\n\r\nimport { RootState } from '../store';\r\n\r\nimport { UserState } from './user.reducer';\r\n\r\nexport const selectUserReducer = (state: RootState): UserState => state.user;\r\n\r\nexport const selectCurrentUser = createSelector(\r\n  selectUserReducer,\r\n  (user) => user.currentUser\r\n);\r\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}"],"names":["BUTTON_TYPE_CLASSES","children","buttonType","isLoading","otherProps","CustomButton","base","BaseButton","google","GoogleSignInButton","inverted","InvertedButton","getButton","disabled","styled","ButtonSpinner","SpinnerContainer","subColor","shrinkLabelStyles","css","FormInputLabel","shrink","Input","Group","label","Boolean","value","length","SignUpContainer","SignUpButtonContainer","defaultFormFields","displayName","email","password","confirmPassword","useState","formFields","setFormFields","dispatch","useDispatch","handleSubmit","e","preventDefault","alert","signUpStart","error","code","AuthErrorCodes","console","log","handleChange","target","name","onSubmit","type","required","onChange","SignInContainer","ButtonsContainer","signInWithGoogle","googleSignInStart","emailSignInStart","onClick","AuthenticationContainer","navigate","useNavigate","currentUser","useSelector","selectCurrentUser","useEffect","createSelector","state","user","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","_objectWithoutProperties","source","excluded","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}